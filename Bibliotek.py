import json  # Vi bruker JSON for √• lagre og hente data fra en fil

FILNAVN = "bibliotek.json"  # Filen der vi lagrer biblioteket

# Funksjon for √• lagre biblioteket til fil
def lagre_data():
    with open(FILNAVN, "w", encoding="utf-8") as f:
        json.dump(bibliotek, f, ensure_ascii=False, indent=4)

# Funksjon for √• laste inn biblioteket fra fil
def laste_data():
    try:
        with open(FILNAVN, "r", encoding="utf-8") as f:
            return json.load(f)  # Leser inn data hvis filen finnes
    except FileNotFoundError:
        return []  # Hvis filen ikke finnes, starter vi med et tomt bibliotek

# Laster inn eksisterende b√∏ker eller starter tomt
bibliotek = laste_data()

# Funksjon for √• legge til en ny bok
def legg_til_bok():
    tittel = input("Hva heter boka? ")
    forfatter = input("Hvem har skrevet den? ")
    bok = {"tittel": tittel, "forfatter": forfatter, "status": "Tilgjengelig"}
    bibliotek.append(bok)  # Legger boka inn i lista
    lagre_data()  # Oppdaterer filen
    print(f"üìñ '{tittel}' lagt til i biblioteket!")

# Funksjon for √• vise alle b√∏ker
def vis_b√∏ker():
    if not bibliotek:  # Hvis listen er tom
        print("üòÖ Biblioteket er tomt!")
        return
    print("\nHer er alle b√∏kene v√•re:")
    for i, bok in enumerate(bibliotek, 1):  # Viser alle b√∏ker med nummerering
        print(f"{i}. {bok['tittel']} av {bok['forfatter']} ‚Üí {bok['status']}")

# Funksjon for √• l√•ne en bok
def l√•n_bok():
    s√∏k = input("Skriv tittel eller forfatter for √• l√•ne bok: ").lower()
    for bok in bibliotek:
        # Sjekker om s√∏ket finnes i tittel eller forfatter
        if s√∏k in bok['tittel'].lower() or s√∏k in bok['forfatter'].lower():
            if bok['status'] == "Tilgjengelig":  # Hvis boka er ledig
                bok['status'] = "Utl√•nt"
                lagre_data()
                print(f"‚úÖ Du har l√•nt '{bok['tittel']}'!")
                return
            else:
                print(f"‚ö†Ô∏è '{bok['tittel']}' er allerede utl√•nt.")
                return
    print("ü§î Fant ingen bok som matcher.")

# Funksjon for √• levere en bok tilbake
def lever_bok():
    s√∏k = input("Skriv tittel eller forfatter for √• levere inn bok: ").lower()
    for bok in bibliotek:
        if s√∏k in bok['tittel'].lower() or s√∏k in bok['forfatter'].lower():
            if bok['status'] == "Utl√•nt":  # Hvis boka er l√•nt ut
                bok['status'] = "Tilgjengelig"
                lagre_data()
                print(f"üôå Takk for at du leverte '{bok['tittel']}'!")
                return
            else:
                print(f"ü§î '{bok['tittel']}' var ikke utl√•nt.")
                return
    print("üòÖ Fant ingen bok som matcher.")

# --- Hovedmeny ---
while True:
    print("\n--- Velkommen til biblioteket! ---")
    print("1Ô∏è‚É£  Legg til bok")
    print("2Ô∏è‚É£  Se alle b√∏ker")
    print("3Ô∏è‚É£  L√•n en bok")
    print("4Ô∏è‚É£  Lever inn en bok")
    print("5Ô∏è‚É£  Avslutt")

    valg = input("Hva vil du gj√∏re? ")

    if valg == "1":
        legg_til_bok()  # Kaller funksjon for √• legge til bok
    elif valg == "2":
        vis_b√∏ker()  # Kaller funksjon for √• vise alle b√∏ker
    elif valg == "3":
        l√•n_bok()  # Kaller funksjon for √• l√•ne bok
    elif valg == "4":
        lever_bok()  # Kaller funksjon for √• levere bok
    elif valg == "5":
        print("üëã Ha det! Biblioteket stenger n√•.")
        break  # Avslutter l√∏kken
    else:
        print("‚ö†Ô∏è Ugyldig valg, pr√∏v igjen!")
